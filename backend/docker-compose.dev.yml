# Development Docker Compose Configuration
# Optimized for development with hot reload and debugging
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15.4-alpine
    container_name: splitwise-postgres-dev
    environment:
      POSTGRES_DB: splitwise_dev
      POSTGRES_USER: splitwise_dev
      POSTGRES_PASSWORD: dev_password_2023
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - splitwise-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U splitwise_dev -d splitwise_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: splitwise-redis-dev
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_dev_data:/data
    networks:
      - splitwise-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # Splitwise Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: splitwise-backend-dev
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/splitwise_dev
      SPRING_DATASOURCE_USERNAME: splitwise_dev
      SPRING_DATASOURCE_PASSWORD: dev_password_2023
      
      # Redis Configuration
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      
      # Development Profile
      SPRING_PROFILES_ACTIVE: development
      
      # JWT Configuration
      JWT_SECRET_KEY: dev_jwt_secret_key_2023_splitwise_development_only
      JWT_ACCESS_TOKEN_EXPIRATION: 86400000
      JWT_REFRESH_TOKEN_EXPIRATION: 604800000
      
      # Email Configuration (Development)
      SPRING_MAIL_HOST: localhost
      SPRING_MAIL_PORT: 1025
      SPRING_MAIL_USERNAME: ""
      SPRING_MAIL_PASSWORD: ""
      
      # Logging Configuration
      LOGGING_LEVEL_COM_SPLITWISE: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY: DEBUG
      
      # Development Flags
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: true
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      
    ports:
      - "8081:8080"  # Map to different port to avoid conflicts
      - "5005:5005"  # Debug port
    volumes:
      - ./src:/app/src:ro  # Mount source for hot reload
      - ./target:/app/target
      - backend_dev_logs:/app/logs
    networks:
      - splitwise-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    stdin_open: true
    tty: true

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: splitwise-mailhog-dev
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - splitwise-dev
    restart: unless-stopped

  # Prometheus for Metrics (Development)
  prometheus:
    image: prom/prometheus:latest
    container_name: splitwise-prometheus-dev
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus-dev.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    networks:
      - splitwise-dev
    restart: unless-stopped

  # Grafana for Monitoring (Development)
  grafana:
    image: grafana/grafana:latest
    container_name: splitwise-grafana-dev
    environment:
      GF_SECURITY_ADMIN_PASSWORD: dev_admin_password
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    ports:
      - "3000:3000"
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - splitwise-dev
    depends_on:
      - prometheus
    restart: unless-stopped

# Named Volumes for Data Persistence
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_logs:
    driver: local
  prometheus_dev_data:
    driver: local
  grafana_dev_data:
    driver: local

# Custom Network
networks:
  splitwise-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
